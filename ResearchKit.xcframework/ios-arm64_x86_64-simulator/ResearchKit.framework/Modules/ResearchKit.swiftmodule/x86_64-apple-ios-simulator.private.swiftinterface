// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name ResearchKit
import DeveloperToolsSupport
import Foundation
import ResearchKit.Private
@_exported import ResearchKit
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc public class SwiftUIViewFactory : ObjectiveC.NSObject {
  @objc public var answerDidUpdateClosure: ((Any) -> Swift.Void)?
  @objc public func makeSwiftUIView(answerFormat: ResearchKit.ORKAnswerFormat, answer: Any) -> UIKit.UIView?
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ORKSwiftStroopResult : ResearchKit.ORKResult {
  public var startTime: Foundation.TimeInterval?
  public var endTime: Foundation.TimeInterval?
  public var color: Swift.String?
  public var text: Swift.String?
  public var colorSelected: Swift.String?
  @objc override dynamic public init(identifier: Swift.String)
  @objc override dynamic public func encode(with aCoder: Foundation.NSCoder)
  @objc required dynamic public init(coder aDecoder: Foundation.NSCoder)
  public class func supportsSecureCoding() -> Swift.Bool
  @objc override dynamic public func isEqual(_ object: Any?) -> Swift.Bool
  @objc override dynamic public func copy(with zone: ObjectiveC.NSZone? = nil) -> Any
  @objc override dynamic public func description(withNumberOfPaddingSpaces numberOfPaddingSpaces: Swift.UInt) -> Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class ORKSwiftStroopStep : ResearchKit.ORKActiveStep {
  public var numberOfAttempts: Swift.Int
  @objc override dynamic public class func stepViewControllerClass() -> Swift.AnyClass
  public class func supportsSecureCoding() -> Swift.Bool
  @objc override dynamic public init(identifier: Swift.String)
  @objc override dynamic public func validateParameters()
  @objc override dynamic public func startsFinished() -> Swift.Bool
  @objc override dynamic public var allowsBackNavigation: Swift.Bool {
    @objc get
  }
  @objc override dynamic public func copy(with zone: ObjectiveC.NSZone? = nil) -> Any
  @objc override dynamic public func encode(with aCoder: Foundation.NSCoder)
  @objc override dynamic public func isEqual(_ object: Any?) -> Swift.Bool
  @objc deinit
}
extension ResearchKit.ORKPredicateStepNavigationRule {
  convenience public init(resultPredicatesAndDestinationStepIdentifiers tuples: [(resultPredicate: Foundation.NSPredicate, destinationStepIdentifier: Swift.String)], defaultStepIdentifierOrNil: Swift.String? = nil)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class ORKSwiftStroopStepViewController : ResearchKit.ORKActiveStepViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(step: ResearchKit.ORKStep?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func stepDidFinish()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var result: ResearchKit.ORKStepResult? {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func start()
  @objc deinit
}
